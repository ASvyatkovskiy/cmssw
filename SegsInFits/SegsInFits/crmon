#!/usr/bin/env python

# author: J. Tucker

import glob, os, sys, time, datetime
from mycrab import *

status_only = bool_from_argv('status_only')
once = bool_from_argv('once')
check_fcn = crab_status if status_only else crab_check_output

sleep_time = 60*5
for x in sys.argv:
    if 'time=' in x:
        sleep_time = eval(x.split('=')[1])

dirs = crab_dirs_from_argv()
debug = False

dirs_done = []

while 1:
    if debug:
        #results = {'crab_noapes': {'Retrieved': [1, 3, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 27, 28, 29, 30, 31, 33, 35, 36, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 64, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 92, 94, 96, 97, 98], 'Running': [2, 5, 7, 9, 11, 23, 24, 26, 32, 34, 37, 38, 39, 45, 55, 56, 57, 59, 60, 61, 62, 63, 68, 70, 74, 87, 89, 91, 93, 95]}, 'crab_agaga': {'gagga': [2,3]}}
        results = {'crab_ntuple11_newycount_noreorderpicky': {'Retrieved_0_0': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98]}, 'crab_ntuple11_newycount_reorder': {'Retrieved_8020_8020': [96], 'Retrieved_0_0': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98], 'Retrieved_8001_8001': [95]}}
    else:
        results = {}
        for d in dirs:
            results[d] = check_fcn(d)
        crab_cleanup()

    ml = 0
    keys = set()
    for res in results.values():
        ml = max(ml, *(len(x) for x in res.keys()))
        keys.update(res.keys())

    keys = list(keys)
    keys.sort()

    print '\nRecap:'
    for d in dirs:
        print d
        v = results[d]
        for status in sorted(v.keys()):
            jobs = v[status]
            print '%s: %s' % (status, crabify_list(jobs))
    print
    
    fmt = '   %%%is' % max([len(x) for x in results.keys()]) + len(keys) * ('  %%%is' % ml)
    #print repr(fmt)
    print '\nSummary:'
    print fmt % tuple(['Directory'] + keys)

    #for k,v in results.items():
    for d in dirs:
        k = d
        v = results[k]
        
        l = []
        for vk in keys:
            l.append((vk, len(v.get(vk, []))))
        l.sort(key=lambda x: x[0])
        print fmt % tuple([k]+[x[1] for x in l])

    done = [k for k,v in results.iteritems() if v.keys() == ['Retrieved_0_0']]
    notdone = [k for k,v in results.iteritems() if k not in done]

    if done:
        print '\nThese are all completely done (all jobs read "Retrieved_0_0"):'
        for d in done:
            print d
        print 'These are not:'
        for d in notdone:
            print d
        print 'Stopping monitoring of the former.'
        for d in done:
            dirs.remove(d)
            dirs_done.append(d)

    if dirs_done:
        print '\nThese dirs all completely done (all jobs read "Retrieved_0_0"):'
        for d in dirs_done:
            print d

    if not dirs:
        print '\nAll done!'
        break

    if once:
        break

    print '\nGoing to sleep for %i seconds at %s...\n' % (sleep_time, datetime.datetime.now().ctime())
    try:
        time.sleep(sleep_time)
    except KeyboardInterrupt:
        raw_input('quit?')
